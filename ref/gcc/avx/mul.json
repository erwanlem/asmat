{
    "function": "mul",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "vmulps %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "vmulpd %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "xorl %esi,%esi",
                "vmovq %xmm2,%rdx",
                "vmovq %xmm3,%rax",
                "vpextrq $1,%xmm3,%rcx",
                "imulq %rdx,%rax",
                "vpextrq $1,%xmm2,%rdx",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "imulq %rcx,%rdx",
                "vmovq %rax,%xmm4",
                "vmovq %xmm1,%rax",
                "vmovq %rdx,%xmm5",
                "vmovq %xmm0,%rdx",
                "vpinsrq $1,%rsi,%xmm4,%xmm2",
                "imulq %rdx,%rax",
                "vpextrq $1,%xmm1,%rdx",
                "vpinsrq $1,%rsi,%xmm5,%xmm3",
                "vmovlhps %xmm3,%xmm2,%xmm2",
                "movq %rax,%rcx",
                "vpextrq $1,%xmm0,%rax",
                "imulq %rdx,%rax",
                "vmovq %rcx,%xmm6",
                "vpinsrq $1,%rsi,%xmm6,%xmm0",
                "vmovq %rax,%xmm7",
                "vpinsrq $1,%rsi,%xmm7,%xmm1",
                "vmovlhps %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmulld %xmm3,%xmm2,%xmm2",
                "vpmulld %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmullw %xmm3,%xmm2,%xmm2",
                "vpmullw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm7",
                "vextractf128 $0x1,%ymm1,%xmm6",
                "vmovdqa %xmm0,%xmm2",
                "vmovdqa .LC34(%rip),%xmm5",
                "vextractf128 $0x1,%ymm0,%xmm1",
                "vpsrlw $8,%xmm0,%xmm4",
                "vpsrlw $8,%xmm7,%xmm0",
                "vpsrlw $8,%xmm1,%xmm3",
                "vpmullw %xmm0,%xmm4,%xmm4",
                "vpsrlw $8,%xmm6,%xmm0",
                "vpmullw %xmm0,%xmm3,%xmm3",
                "vpmullw %xmm6,%xmm1,%xmm1",
                "vpmullw %xmm7,%xmm2,%xmm0",
                "vpand %xmm5,%xmm4,%xmm4",
                "vpand %xmm5,%xmm3,%xmm3",
                "vpsllw $8,%xmm4,%xmm4",
                "vpand %xmm5,%xmm1,%xmm1",
                "vpsllw $8,%xmm3,%xmm3",
                "vpand %xmm5,%xmm0,%xmm0",
                "vpor %xmm4,%xmm0,%xmm0",
                "vpor %xmm3,%xmm1,%xmm1",
                "vinsertf128 $0x1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "jmp _Z12func_mul_253N3eve10avx_abi_v04wideImNS_5fixedILl4EEEEES4_"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmulld %xmm3,%xmm2,%xmm2",
                "vpmulld %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmullw %xmm3,%xmm2,%xmm2",
                "vpmullw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "jmp _Z12func_mul_256N3eve10avx_abi_v04wideIhNS_5fixedILl32EEEEES4_"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "jmp _Z12func_mul_253N3eve10avx_abi_v04wideImNS_5fixedILl4EEEEES4_"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmulld %xmm3,%xmm2,%xmm2",
                "vpmulld %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpmullw %xmm3,%xmm2,%xmm2",
                "vpmullw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "jmp _Z12func_mul_256N3eve10avx_abi_v04wideIhNS_5fixedILl32EEEEES4_"
            ]
        }
    ]
}