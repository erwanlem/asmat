{
    "function": "add",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "vaddps %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "vaddpd %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddq %xmm3,%xmm2,%xmm2",
                "vpaddq %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddd %xmm3,%xmm2,%xmm2",
                "vpaddd %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddw %xmm3,%xmm2,%xmm2",
                "vpaddw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddb %xmm3,%xmm2,%xmm2",
                "vpaddb %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddq %xmm3,%xmm2,%xmm2",
                "vpaddq %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddd %xmm3,%xmm2,%xmm2",
                "vpaddd %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddw %xmm3,%xmm2,%xmm2",
                "vpaddw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddb %xmm3,%xmm2,%xmm2",
                "vpaddb %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddq %xmm3,%xmm2,%xmm2",
                "vpaddq %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddd %xmm3,%xmm2,%xmm2",
                "vpaddd %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddw %xmm3,%xmm2,%xmm2",
                "vpaddw %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "vmovdqa %xmm1,%xmm3",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm1,%xmm1",
                "vextractf128 $0x1,%ymm0,%xmm0",
                "vpaddb %xmm3,%xmm2,%xmm2",
                "vpaddb %xmm1,%xmm0,%xmm0",
                "vinsertf128 $0x1,%xmm0,%ymm2,%ymm0"
            ]
        }
    ]
}