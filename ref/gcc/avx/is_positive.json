{
    "function": "is_positive",
    "asm": [
        {
            "type": [
                "float"
            ],
            "instr": [
                "vextractf128 $0x1,%ymm0,%xmm2",
                "vpxor %xmm3,%xmm3,%xmm3",
                "vpcmpgtd %xmm0,%xmm3,%xmm0",
                "vpcmpgtd %xmm2,%xmm3,%xmm3",
                "vinsertf128 $0x1,%xmm3,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "double"
            ],
            "instr": [
                "vmovq %xmm0,%rax",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm0,%xmm1",
                "xorl %edx,%edx",
                "cmpq %rax,%rdx",
                "setg %al",
                "movzbl %al,%eax",
                "vmovq %rax,%xmm0",
                "vpextrq $1,%xmm2,%rax",
                "vpxor %xmm2,%xmm2,%xmm2",
                "cmpq %rax,%rdx",
                "setg %al",
                "xorl %ecx,%ecx",
                "movzbl %al,%eax",
                "vpinsrq $1,%rax,%xmm0,%xmm0",
                "vmovq %xmm1,%rax",
                "cmpq %rax,%rdx",
                "vpextrq $1,%xmm1,%rax",
                "vpsubq %xmm0,%xmm2,%xmm0",
                "setg %cl",
                "cmpq %rax,%rdx",
                "setg %al",
                "vmovq %rcx,%xmm3",
                "movzbl %al,%eax",
                "vpinsrq $1,%rax,%xmm3,%xmm1",
                "vpsubq %xmm1,%xmm2,%xmm2",
                "vinsertf128 $0x1,%xmm2,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t"
            ],
            "instr": [
                "vmovq %xmm0,%rax",
                "vmovdqa %xmm0,%xmm2",
                "vextractf128 $0x1,%ymm0,%xmm1",
                "xorl %edx,%edx",
                "cmpq %rax,%rdx",
                "setg %al",
                "movzbl %al,%eax",
                "vmovq %rax,%xmm0",
                "vpextrq $1,%xmm2,%rax",
                "vpxor %xmm2,%xmm2,%xmm2",
                "cmpq %rax,%rdx",
                "setg %al",
                "xorl %ecx,%ecx",
                "movzbl %al,%eax",
                "vpinsrq $1,%rax,%xmm0,%xmm0",
                "vmovq %xmm1,%rax",
                "cmpq %rax,%rdx",
                "vpextrq $1,%xmm1,%rax",
                "vpsubq %xmm0,%xmm2,%xmm0",
                "setg %cl",
                "cmpq %rax,%rdx",
                "setg %al",
                "vmovq %rcx,%xmm3",
                "movzbl %al,%eax",
                "vpinsrq $1,%rax,%xmm3,%xmm1",
                "vpsubq %xmm1,%xmm2,%xmm2",
                "vinsertf128 $0x1,%xmm2,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t"
            ],
            "instr": [
                "vextractf128 $0x1,%ymm0,%xmm2",
                "vpxor %xmm3,%xmm3,%xmm3",
                "vpcmpgtd %xmm0,%xmm3,%xmm0",
                "vpcmpgtd %xmm2,%xmm3,%xmm3",
                "vinsertf128 $0x1,%xmm3,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t"
            ],
            "instr": [
                "vextractf128 $0x1,%ymm0,%xmm2",
                "vpxor %xmm3,%xmm3,%xmm3",
                "vpcmpgtw %xmm0,%xmm3,%xmm0",
                "vpcmpgtw %xmm2,%xmm3,%xmm3",
                "vinsertf128 $0x1,%xmm3,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int8_t"
            ],
            "instr": [
                "vextractf128 $0x1,%ymm0,%xmm2",
                "vpxor %xmm3,%xmm3,%xmm3",
                "vpcmpgtb %xmm0,%xmm3,%xmm0",
                "vpcmpgtb %xmm2,%xmm3,%xmm3",
                "vinsertf128 $0x1,%xmm3,%ymm0,%ymm0",
                "vxorps .LC1(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t"
            ],
            "instr": [
                "vmovdqa .LC6(%rip),%ymm0"
            ]
        }
    ]
}