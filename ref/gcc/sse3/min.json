{
    "function": "min",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "minps %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "minpd %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "movq %xmm1,%rax",
                "movq %xmm0,%rdx",
                "movdqa %xmm0,%xmm2",
                "cmpq %rdx,%rax",
                "movhlps %xmm1,%xmm3",
                "movhlps %xmm2,%xmm4",
                "cmovle %rax,%rdx",
                "movq %xmm3,%rax",
                "movq %rdx,%xmm0",
                "movq %xmm4,%rdx",
                "cmpq %rdx,%rax",
                "cmovg %rdx,%rax",
                "movq %rax,%xmm5",
                "punpcklqdq %xmm5,%xmm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "pcmpgtd %xmm1,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "pminsw %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "pcmpgtb %xmm1,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "movq %xmm1,%rax",
                "movq %xmm0,%rdx",
                "movdqa %xmm0,%xmm2",
                "cmpq %rdx,%rax",
                "movhlps %xmm1,%xmm3",
                "movhlps %xmm2,%xmm4",
                "cmovbe %rax,%rdx",
                "movq %xmm3,%rax",
                "movq %rdx,%xmm0",
                "movq %xmm4,%rdx",
                "cmpq %rdx,%rax",
                "cmova %rdx,%rax",
                "movq %rax,%xmm5",
                "punpcklqdq %xmm5,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "movdqa .LC9(%rip),%xmm3",
                "movdqa %xmm0,%xmm2",
                "paddd %xmm3,%xmm2",
                "paddd %xmm1,%xmm3",
                "pcmpgtd %xmm3,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "movdqa .LC10(%rip),%xmm3",
                "movdqa %xmm0,%xmm2",
                "paddw %xmm3,%xmm2",
                "paddw %xmm1,%xmm3",
                "pcmpgtw %xmm3,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "pminub %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "movq %xmm1,%rax",
                "movq %xmm0,%rdx",
                "movdqa %xmm0,%xmm2",
                "cmpq %rdx,%rax",
                "movhlps %xmm1,%xmm3",
                "movhlps %xmm2,%xmm4",
                "cmovbe %rax,%rdx",
                "movq %xmm3,%rax",
                "movq %rdx,%xmm0",
                "movq %xmm4,%rdx",
                "cmpq %rdx,%rax",
                "cmova %rdx,%rax",
                "movq %rax,%xmm5",
                "punpcklqdq %xmm5,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "movdqa .LC9(%rip),%xmm3",
                "movdqa %xmm0,%xmm2",
                "paddd %xmm3,%xmm2",
                "paddd %xmm1,%xmm3",
                "pcmpgtd %xmm3,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "movdqa .LC10(%rip),%xmm3",
                "movdqa %xmm0,%xmm2",
                "paddw %xmm3,%xmm2",
                "paddw %xmm1,%xmm3",
                "pcmpgtw %xmm3,%xmm2",
                "movdqa %xmm2,%xmm3",
                "pand %xmm2,%xmm1",
                "pandn %xmm0,%xmm3",
                "por %xmm3,%xmm1",
                "movdqa %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "pminub %xmm1,%xmm0"
            ]
        }
    ]
}