{
    "function": "abs",
    "asm": [
        {
            "type": [
                "float"
            ],
            "instr": [
                "vandps .LCPI0_0(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "double"
            ],
            "instr": [
                "vandps .LCPI1_0(%rip),%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t"
            ],
            "instr": [
                "vextractf128 $1,%ymm0,%xmm1",
                "vpxor %xmm2,%xmm2,%xmm2",
                "vpsubq %xmm1,%xmm2,%xmm1",
                "vpsubq %xmm0,%xmm2,%xmm2",
                "vinsertf128 $1,%xmm1,%ymm2,%ymm1",
                "vblendvpd %ymm0,%ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t"
            ],
            "instr": [
                "vextractf128 $1,%ymm0,%xmm1",
                "vpabsd %xmm0,%xmm0",
                "vpabsd %xmm1,%xmm1",
                "vinsertf128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t"
            ],
            "instr": [
                "vextractf128 $1,%ymm0,%xmm1",
                "vpabsw %xmm0,%xmm0",
                "vpabsw %xmm1,%xmm1",
                "vinsertf128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int8_t"
            ],
            "instr": [
                "vextractf128 $1,%ymm0,%xmm1",
                "vpabsb %xmm0,%xmm0",
                "vpabsb %xmm1,%xmm1",
                "vinsertf128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint32_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint16_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint8_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint64_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint32_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint16_t"
            ],
            "instr": []
        },
        {
            "type": [
                "std::uint8_t"
            ],
            "instr": []
        }
    ]
}