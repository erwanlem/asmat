{
    "function": "div",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "vdivps %ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "vdivpd %ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB134_1",
                "",
                "cqto",
                "idivq %rcx",
                "movq %rax,%rcx",
                "jmp .LBB134_3",
                ".LBB134_1:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "movl %eax,%ecx",
                ".LBB134_3:",
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rsi",
                "movq %rax,%rdx",
                "orq %rsi,%rdx",
                "shrq $32,%rdx",
                "je .LBB134_4",
                "",
                "cqto",
                "idivq %rsi",
                "jmp .LBB134_6",
                ".LBB134_4:",
                "",
                "xorl %edx,%edx",
                "divl %esi",
                "",
                ".LBB134_6:",
                "vmovq %rcx,%xmm0",
                "vmovq %rax,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB134_7",
                "",
                "cqto",
                "idivq %rcx",
                "jmp .LBB134_9",
                ".LBB134_7:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                ".LBB134_9:",
                "vpunpcklqdq %xmm1,%xmm0,%xmm0",
                "vmovq %rax,%xmm1",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB134_10",
                "",
                "cqto",
                "idivq %rcx",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0",
                "retq",
                ".LBB134_10:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "vcvtdq2pd %xmm0,%ymm2",
                "vcvtdq2pd %xmm1,%ymm3",
                "vdivpd %ymm3,%ymm2,%ymm2",
                "vextractf128 $1,%ymm0,%xmm0",
                "vextractf128 $1,%ymm1,%xmm1",
                "vcvttpd2dq %ymm2,%xmm2",
                "vcvtdq2pd %xmm0,%ymm0",
                "vcvtdq2pd %xmm1,%ymm1",
                "vdivpd %ymm1,%ymm0,%ymm0",
                "vcvttpd2dq %ymm0,%xmm0",
                "vinsertf128 $1,%xmm0,%ymm2,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "subq $88,%rsp",
                ".cfi_def_cfa_offset96",
                "vmovups %ymm0,16(%rsp)",
                "vmovups %ymm1,48(%rsp)",
                "movq %rsp,%rax",
                "movq %rax,8(%rsp)",
                ".Ltmp0:",
                "leaq 8(%rsp),%rdi",
                "leaq 16(%rsp),%rsi",
                "callq _ZN4kumi5applyIZN3eve6detail9aggregateIZNS2_8self_divIsNS1_10avx_abi_v04wideIsNS1_5fixedILl16EEEEES8_EEDcRNS6_IT_T1_EERKT0_EUlSA_SE_E_JS9_S9_EEEDaSA_DpT0_EUlDpT_E_RNS_5tupleIJSt5arrayINS6_IsNS7_ILl8EEEEELm2EESR_EEEEEDcOSA_OSE_",
                ".Ltmp1:",
                "",
                "addq $88,%rsp",
                ".cfi_def_cfa_offset8"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "pushq %rbx",
                ".cfi_def_cfa_offset16",
                "subq $176,%rsp",
                ".cfi_def_cfa_offset192",
                ".cfi_offset%rbx,-16",
                "vpermilps $238,%xmm0,%xmm3",
                "vpermilps $238,%xmm1,%xmm2",
                "vmovups %ymm0,112(%rsp)",
                "vmovaps %xmm0,16(%rsp)",
                "vmovaps %xmm3,32(%rsp)",
                "vmovups %ymm1,144(%rsp)",
                "vmovaps %xmm1,48(%rsp)",
                "vmovaps %xmm2,64(%rsp)",
                "movq %rsp,%rbx",
                "movq %rbx,8(%rsp)",
                ".Ltmp3:",
                "leaq 8(%rsp),%rdi",
                "leaq 16(%rsp),%rsi",
                "vzeroupper",
                "callq _ZN4kumi5applyIZN3eve6detail9aggregateIZNS2_8self_divIaNS1_10avx_abi_v04wideIaNS1_5fixedILl16EEEEES8_EEDcRNS6_IT_T1_EERKT0_EUlSA_SE_E_JS9_S9_EEEDaSA_DpT0_EUlDpT_E_RNS_5tupleIJSt5arrayINS6_IaNS7_ILl8EEEEELm2EESR_EEEEEDcOSA_OSE_",
                "",
                "vmovups %ymm0,80(%rsp)",
                ".Ltmp4:",
                "",
                "vmovups 112(%rsp),%ymm0",
                "vextractf128 $1,%ymm0,%xmm0",
                "vmovups 144(%rsp),%ymm1",
                "vextractf128 $1,%ymm1,%xmm1",
                "vpermilps $238,%xmm0,%xmm2",
                "vpermilps $238,%xmm1,%xmm3",
                "vmovaps %xmm0,16(%rsp)",
                "vmovaps %xmm2,32(%rsp)",
                "vmovaps %xmm1,48(%rsp)",
                "vmovaps %xmm3,64(%rsp)",
                "movq %rbx,8(%rsp)",
                ".Ltmp6:",
                "leaq 8(%rsp),%rdi",
                "leaq 16(%rsp),%rsi",
                "vzeroupper",
                "callq _ZN4kumi5applyIZN3eve6detail9aggregateIZNS2_8self_divIaNS1_10avx_abi_v04wideIaNS1_5fixedILl16EEEEES8_EEDcRNS6_IT_T1_EERKT0_EUlSA_SE_E_JS9_S9_EEEDaSA_DpT0_EUlDpT_E_RNS_5tupleIJSt5arrayINS6_IaNS7_ILl8EEEEELm2EESR_EEEEEDcOSA_OSE_",
                ".Ltmp7:",
                "",
                "vmovups 80(%rsp),%ymm1",
                "vinsertf128 $1,%xmm0,%ymm1,%ymm0",
                "addq $176,%rsp",
                ".cfi_def_cfa_offset16",
                "popq %rbx",
                ".cfi_def_cfa_offset8"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_1",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "movq %rax,%rcx",
                "jmp .LBB142_3",
                ".LBB142_1:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "movl %eax,%ecx",
                ".LBB142_3:",
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rsi",
                "movq %rax,%rdx",
                "orq %rsi,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_4",
                "",
                "xorl %edx,%edx",
                "divq %rsi",
                "jmp .LBB142_6",
                ".LBB142_4:",
                "",
                "xorl %edx,%edx",
                "divl %esi",
                "",
                ".LBB142_6:",
                "vmovq %rcx,%xmm0",
                "vmovq %rax,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_7",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "jmp .LBB142_9",
                ".LBB142_7:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                ".LBB142_9:",
                "vpunpcklqdq %xmm1,%xmm0,%xmm0",
                "vmovq %rax,%xmm1",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_10",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0",
                "retq",
                ".LBB142_10:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vmovq %xmm0,%rcx",
                "shrq $32,%rcx",
                "vmovq %xmm1,%rdi",
                "shrq $32,%rdi",
                "vmovd %xmm0,%eax",
                "vmovd %xmm1,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%esi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vmovd %esi,%xmm4",
                "vpinsrd $2,%eax,%xmm4,%xmm4",
                "vpextrq $1,%xmm0,%rcx",
                "shrq $32,%rcx",
                "vpextrq $1,%xmm1,%rdi",
                "shrq $32,%rdi",
                "vpextrd $2,%xmm0,%eax",
                "vpextrd $2,%xmm1,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%esi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vmovd %esi,%xmm0",
                "vpinsrd $2,%eax,%xmm0,%xmm0",
                "vshufps $136,%xmm0,%xmm4,%xmm0",
                "vmovq %xmm2,%rcx",
                "shrq $32,%rcx",
                "vmovq %xmm3,%rdi",
                "shrq $32,%rdi",
                "vmovd %xmm2,%eax",
                "vmovd %xmm3,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%r8d",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vpextrq $1,%xmm2,%rcx",
                "shrq $32,%rcx",
                "vpextrq $1,%xmm3,%rdi",
                "shrq $32,%rdi",
                "vpextrd $2,%xmm2,%edx",
                "vpextrd $2,%xmm3,%esi",
                "vmovd %r8d,%xmm1",
                "vpinsrd $1,%eax,%xmm1,%xmm1",
                "movl %edx,%eax",
                "xorl %edx,%edx",
                "divl %esi",
                "vpinsrd $2,%eax,%xmm1,%xmm1",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vpinsrd $3,%eax,%xmm1,%xmm1",
                "vinsertf128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovd %xmm0,%eax",
                "vmovd %xmm1,%esi",
                "vpextrw $1,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $1,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm2",
                "vpinsrw $1,%eax,%xmm2,%xmm4",
                "vpextrw $2,%xmm0,%eax",
                "vpextrw $2,%xmm1,%esi",
                "vextracti128 $1,%ymm0,%xmm2",
                "vpextrw $3,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $3,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm3",
                "vpinsrw $1,%eax,%xmm3,%xmm5",
                "vpextrw $4,%xmm0,%eax",
                "vpextrw $4,%xmm1,%esi",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpextrw $5,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $5,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm6",
                "vpinsrw $1,%eax,%xmm6,%xmm6",
                "vpextrw $6,%xmm0,%eax",
                "vpextrw $6,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movl %eax,%ecx",
                "vpextrw $7,%xmm0,%eax",
                "vpextrw $7,%xmm1,%esi",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "",
                "vmovd %ecx,%xmm0",
                "vpinsrw $1,%eax,%xmm0,%xmm1",
                "vmovd %xmm2,%eax",
                "vmovd %xmm3,%esi",
                "vpextrw $1,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $1,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm0",
                "vpinsrw $1,%eax,%xmm0,%xmm7",
                "vpextrw $2,%xmm2,%eax",
                "vpextrw $2,%xmm3,%esi",
                "vpunpcklqdq %xmm5,%xmm4,%xmm0",
                "vpextrw $3,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $3,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm4",
                "vpinsrw $1,%eax,%xmm4,%xmm4",
                "vpextrw $4,%xmm2,%eax",
                "vpextrw $4,%xmm3,%esi",
                "vpunpcklqdq %xmm1,%xmm6,%xmm1",
                "vpextrw $5,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $5,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm5",
                "vpinsrw $1,%eax,%xmm5,%xmm5",
                "vpextrw $6,%xmm2,%eax",
                "vpextrw $6,%xmm3,%esi",
                "vpunpcklqdq %xmm4,%xmm7,%xmm4",
                "vpextrw $7,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $7,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm2",
                "vpinsrw $1,%eax,%xmm2,%xmm2",
                "vpunpcklqdq %xmm2,%xmm5,%xmm2",
                "vinserti128 $1,%xmm2,%ymm1,%ymm1",
                "vinserti128 $1,%xmm4,%ymm0,%ymm0",
                "vshufps $136,%ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "subq $88,%rsp",
                ".cfi_def_cfa_offset96",
                "vmovups %ymm0,16(%rsp)",
                "vmovups %ymm1,48(%rsp)",
                "movq %rsp,%rax",
                "movq %rax,8(%rsp)",
                ".Ltmp12:",
                "leaq 8(%rsp),%rdi",
                "leaq 16(%rsp),%rsi",
                "callq _ZN4kumi5applyIZN3eve6detail9aggregateIZNS2_8self_divIhNS1_10avx_abi_v04wideIhNS1_5fixedILl32EEEEES8_EEDcRNS6_IT_T1_EERKT0_EUlSA_SE_E_JS9_S9_EEEDaSA_DpT0_EUlDpT_E_RNS_5tupleIJSt5arrayINS6_IhNS7_ILl16EEEEELm2EESR_EEEEEDcOSA_OSE_",
                ".Ltmp13:",
                "",
                "addq $88,%rsp",
                ".cfi_def_cfa_offset8"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_1",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "movq %rax,%rcx",
                "jmp .LBB142_3",
                ".LBB142_1:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "movl %eax,%ecx",
                ".LBB142_3:",
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rsi",
                "movq %rax,%rdx",
                "orq %rsi,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_4",
                "",
                "xorl %edx,%edx",
                "divq %rsi",
                "jmp .LBB142_6",
                ".LBB142_4:",
                "",
                "xorl %edx,%edx",
                "divl %esi",
                "",
                ".LBB142_6:",
                "vmovq %rcx,%xmm0",
                "vmovq %rax,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_7",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "jmp .LBB142_9",
                ".LBB142_7:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                ".LBB142_9:",
                "vpunpcklqdq %xmm1,%xmm0,%xmm0",
                "vmovq %rax,%xmm1",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm3,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB142_10",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0",
                "retq",
                ".LBB142_10:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                "vmovq %rax,%xmm2",
                "vpunpcklqdq %xmm2,%xmm1,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vmovq %xmm0,%rcx",
                "shrq $32,%rcx",
                "vmovq %xmm1,%rdi",
                "shrq $32,%rdi",
                "vmovd %xmm0,%eax",
                "vmovd %xmm1,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%esi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vmovd %esi,%xmm4",
                "vpinsrd $2,%eax,%xmm4,%xmm4",
                "vpextrq $1,%xmm0,%rcx",
                "shrq $32,%rcx",
                "vpextrq $1,%xmm1,%rdi",
                "shrq $32,%rdi",
                "vpextrd $2,%xmm0,%eax",
                "vpextrd $2,%xmm1,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%esi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vmovd %esi,%xmm0",
                "vpinsrd $2,%eax,%xmm0,%xmm0",
                "vshufps $136,%xmm0,%xmm4,%xmm0",
                "vmovq %xmm2,%rcx",
                "shrq $32,%rcx",
                "vmovq %xmm3,%rdi",
                "shrq $32,%rdi",
                "vmovd %xmm2,%eax",
                "vmovd %xmm3,%esi",
                "xorl %edx,%edx",
                "divl %esi",
                "movl %eax,%r8d",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vpextrq $1,%xmm2,%rcx",
                "shrq $32,%rcx",
                "vpextrq $1,%xmm3,%rdi",
                "shrq $32,%rdi",
                "vpextrd $2,%xmm2,%edx",
                "vpextrd $2,%xmm3,%esi",
                "vmovd %r8d,%xmm1",
                "vpinsrd $1,%eax,%xmm1,%xmm1",
                "movl %edx,%eax",
                "xorl %edx,%edx",
                "divl %esi",
                "vpinsrd $2,%eax,%xmm1,%xmm1",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divl %edi",
                "vpinsrd $3,%eax,%xmm1,%xmm1",
                "vinsertf128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vmovd %xmm0,%eax",
                "vmovd %xmm1,%esi",
                "vpextrw $1,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $1,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm2",
                "vpinsrw $1,%eax,%xmm2,%xmm4",
                "vpextrw $2,%xmm0,%eax",
                "vpextrw $2,%xmm1,%esi",
                "vextracti128 $1,%ymm0,%xmm2",
                "vpextrw $3,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $3,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm3",
                "vpinsrw $1,%eax,%xmm3,%xmm5",
                "vpextrw $4,%xmm0,%eax",
                "vpextrw $4,%xmm1,%esi",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpextrw $5,%xmm0,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $5,%xmm1,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm6",
                "vpinsrw $1,%eax,%xmm6,%xmm6",
                "vpextrw $6,%xmm0,%eax",
                "vpextrw $6,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movl %eax,%ecx",
                "vpextrw $7,%xmm0,%eax",
                "vpextrw $7,%xmm1,%esi",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "",
                "vmovd %ecx,%xmm0",
                "vpinsrw $1,%eax,%xmm0,%xmm1",
                "vmovd %xmm2,%eax",
                "vmovd %xmm3,%esi",
                "vpextrw $1,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $1,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm0",
                "vpinsrw $1,%eax,%xmm0,%xmm7",
                "vpextrw $2,%xmm2,%eax",
                "vpextrw $2,%xmm3,%esi",
                "vpunpcklqdq %xmm5,%xmm4,%xmm0",
                "vpextrw $3,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $3,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm4",
                "vpinsrw $1,%eax,%xmm4,%xmm4",
                "vpextrw $4,%xmm2,%eax",
                "vpextrw $4,%xmm3,%esi",
                "vpunpcklqdq %xmm1,%xmm6,%xmm1",
                "vpextrw $5,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $5,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm5",
                "vpinsrw $1,%eax,%xmm5,%xmm5",
                "vpextrw $6,%xmm2,%eax",
                "vpextrw $6,%xmm3,%esi",
                "vpunpcklqdq %xmm4,%xmm7,%xmm4",
                "vpextrw $7,%xmm2,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %si",
                "movl %eax,%esi",
                "vpextrw $7,%xmm3,%edi",
                "movl %ecx,%eax",
                "xorl %edx,%edx",
                "divw %di",
                "",
                "vmovd %esi,%xmm2",
                "vpinsrw $1,%eax,%xmm2,%xmm2",
                "vpunpcklqdq %xmm2,%xmm5,%xmm2",
                "vinserti128 $1,%xmm2,%ymm1,%ymm1",
                "vinserti128 $1,%xmm4,%ymm0,%ymm0",
                "vshufps $136,%ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "subq $88,%rsp",
                ".cfi_def_cfa_offset96",
                "vmovups %ymm0,16(%rsp)",
                "vmovups %ymm1,48(%rsp)",
                "movq %rsp,%rax",
                "movq %rax,8(%rsp)",
                ".Ltmp12:",
                "leaq 8(%rsp),%rdi",
                "leaq 16(%rsp),%rsi",
                "callq _ZN4kumi5applyIZN3eve6detail9aggregateIZNS2_8self_divIhNS1_10avx_abi_v04wideIhNS1_5fixedILl32EEEEES8_EEDcRNS6_IT_T1_EERKT0_EUlSA_SE_E_JS9_S9_EEEDaSA_DpT0_EUlDpT_E_RNS_5tupleIJSt5arrayINS6_IhNS7_ILl16EEEEELm2EESR_EEEEEDcOSA_OSE_",
                ".Ltmp13:",
                "",
                "addq $88,%rsp",
                ".cfi_def_cfa_offset8"
            ]
        }
    ]
}