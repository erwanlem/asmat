{
    "function": "dot",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "vmulps %ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "vmulpd %ymm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rcx",
                "vextracti128 $1,%ymm1,%xmm0",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm1",
                "vpunpcklqdq %xmm1,%xmm3,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm0",
                "vpunpcklqdq %xmm0,%xmm3,%xmm0",
                "vinserti128 $1,%xmm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "vpmulld %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "vpmullw %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpsrlw $8,%xmm0,%xmm4",
                "vpsrlw $8,%xmm1,%xmm5",
                "vpmullw %xmm4,%xmm5,%xmm4",
                "vpbroadcastw .LCPI280_0(%rip),%xmm5",
                "vpmullw %xmm0,%xmm1,%xmm0",
                "vpand %xmm5,%xmm0,%xmm0",
                "vpsllw $8,%xmm4,%xmm1",
                "vpor %xmm1,%xmm0,%xmm0",
                "vpsrlw $8,%xmm2,%xmm1",
                "vpsrlw $8,%xmm3,%xmm4",
                "vpmullw %xmm1,%xmm4,%xmm1",
                "vpmullw %xmm2,%xmm3,%xmm2",
                "vpand %xmm5,%xmm2,%xmm2",
                "vpsllw $8,%xmm1,%xmm1",
                "vpor %xmm1,%xmm2,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rcx",
                "vextracti128 $1,%ymm1,%xmm0",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm1",
                "vpunpcklqdq %xmm1,%xmm3,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm0",
                "vpunpcklqdq %xmm0,%xmm3,%xmm0",
                "vinserti128 $1,%xmm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vpmulld %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vpmullw %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpsrlw $8,%xmm0,%xmm4",
                "vpsrlw $8,%xmm1,%xmm5",
                "vpmullw %xmm4,%xmm5,%xmm4",
                "vpbroadcastw .LCPI288_0(%rip),%xmm5",
                "vpmullw %xmm0,%xmm1,%xmm0",
                "vpand %xmm5,%xmm0,%xmm0",
                "vpsllw $8,%xmm4,%xmm1",
                "vpor %xmm1,%xmm0,%xmm0",
                "vpsrlw $8,%xmm2,%xmm1",
                "vpsrlw $8,%xmm3,%xmm4",
                "vpmullw %xmm1,%xmm4,%xmm1",
                "vpmullw %xmm2,%xmm3,%xmm2",
                "vpand %xmm5,%xmm2,%xmm2",
                "vpsllw $8,%xmm1,%xmm1",
                "vpor %xmm1,%xmm2,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vmovq %xmm0,%rax",
                "vmovq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm0,%rax",
                "vpextrq $1,%xmm1,%rcx",
                "vextracti128 $1,%ymm1,%xmm0",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm1",
                "vpunpcklqdq %xmm1,%xmm3,%xmm1",
                "vmovq %xmm2,%rax",
                "vmovq %xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm3",
                "vpextrq $1,%xmm2,%rax",
                "vpextrq $1,%xmm0,%rcx",
                "imulq %rax,%rcx",
                "vmovq %rcx,%xmm0",
                "vpunpcklqdq %xmm0,%xmm3,%xmm0",
                "vinserti128 $1,%xmm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "vpmulld %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "vpmullw %ymm0,%ymm1,%ymm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "vextracti128 $1,%ymm0,%xmm2",
                "vextracti128 $1,%ymm1,%xmm3",
                "vpsrlw $8,%xmm0,%xmm4",
                "vpsrlw $8,%xmm1,%xmm5",
                "vpmullw %xmm4,%xmm5,%xmm4",
                "vpbroadcastw .LCPI288_0(%rip),%xmm5",
                "vpmullw %xmm0,%xmm1,%xmm0",
                "vpand %xmm5,%xmm0,%xmm0",
                "vpsllw $8,%xmm4,%xmm1",
                "vpor %xmm1,%xmm0,%xmm0",
                "vpsrlw $8,%xmm2,%xmm1",
                "vpsrlw $8,%xmm3,%xmm4",
                "vpmullw %xmm1,%xmm4,%xmm1",
                "vpmullw %xmm2,%xmm3,%xmm2",
                "vpand %xmm5,%xmm2,%xmm2",
                "vpsllw $8,%xmm1,%xmm1",
                "vpor %xmm1,%xmm2,%xmm1",
                "vinserti128 $1,%xmm1,%ymm0,%ymm0"
            ]
        }
    ]
}