{
    "function": "rem",
    "asm": [
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "movq %xmm0,%rax",
                "movq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB93_1",
                "",
                "cqto",
                "idivq %rcx",
                "jmp .LBB93_3",
                ".LBB93_1:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                ".LBB93_3:",
                "movq %rdx,%xmm0",
                "pshufd $238,%xmm2,%xmm2",
                "movq %xmm2,%rax",
                "pshufd $238,%xmm1,%xmm1",
                "movq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB93_4",
                "",
                "cqto",
                "idivq %rcx",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0",
                "retq",
                ".LBB93_4:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "movd %xmm0,%eax",
                "movd %xmm1,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-24(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $85,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $85,%xmm1,%xmm2",
                "movd %xmm2,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-20(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $238,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $238,%xmm1,%xmm2",
                "movd %xmm2,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-16(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $255,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $255,%xmm1,%xmm1",
                "movd %xmm1,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-12(%rsp)",
                "movaps -24(%rsp),%xmm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "movd %xmm0,%eax",
                "cwtl",
                "pshufd $238,%xmm1,%xmm2",
                "movq %xmm1,%rcx",
                "movswl %cx,%esi",
                "cltd",
                "idivl %esi",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-24(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $1,%xmm0,%eax",
                "cwtl",
                "movl %ecx,%esi",
                "sarl $16,%esi",
                "cltd",
                "idivl %esi",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-22(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $2,%xmm0,%eax",
                "movq %xmm2,%rdx",
                "cwtl",
                "movswl %dx,%esi",
                "movq %rdx,%rdi",
                "shrq $16,%rcx",
                "sarl $16,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-20(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $3,%xmm0,%eax",
                "shrq $16,%rdi",
                "cwtl",
                "pshufd $85,%xmm1,%xmm3",
                "movd %xmm3,%ecx",
                "sarl $16,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-18(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $4,%xmm0,%eax",
                "cwtl",
                "cltd",
                "idivl %esi",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-16(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $5,%xmm0,%eax",
                "cwtl",
                "movd %xmm2,%ecx",
                "sarl $16,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-14(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $6,%xmm0,%eax",
                "cwtl",
                "sarl $16,%edi",
                "cltd",
                "idivl %edi",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-12(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $7,%xmm0,%eax",
                "cwtl",
                "pshufd $255,%xmm1,%xmm1",
                "movd %xmm1,%ecx",
                "sarl $16,%ecx",
                "cltd",
                "idivl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-10(%rsp)",
                "movaps -24(%rsp),%xmm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "subq $56,%rsp",
                ".cfi_def_cfa_offset64",
                "movaps %xmm0,(%rsp)",
                "movaps %xmm1,32(%rsp)",
                "movq %rsp,%rax",
                "movq %rax,16(%rsp)",
                "leaq 32(%rsp),%rax",
                "movq %rax,24(%rsp)",
                "leaq 16(%rsp),%rdi",
                "callq _ZZN3eve6detail8self_remIaNS_10sse_abi_v04wideIaNS_5fixedILl16EEEEES5_EEDcRNS3_IT_T1_EERKT0_ENKUlDpT_E_clIJSt17integral_constantImLm0EESI_ImLm1EESI_ImLm2EESI_ImLm3EESI_ImLm4EESI_ImLm5EESI_ImLm6EESI_ImLm7EESI_ImLm8EESI_ImLm9EESI_ImLm10EESI_ImLm11EESI_ImLm12EESI_ImLm13EESI_ImLm14EESI_ImLm15EEEEEDaSF_",
                "movaps (%rsp),%xmm0",
                "addq $56,%rsp",
                ".cfi_def_cfa_offset8"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "movq %xmm0,%rax",
                "movq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB97_1",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "jmp .LBB97_3",
                ".LBB97_1:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                ".LBB97_3:",
                "movq %rdx,%xmm0",
                "pshufd $238,%xmm2,%xmm2",
                "movq %xmm2,%rax",
                "pshufd $238,%xmm1,%xmm1",
                "movq %xmm1,%rcx",
                "movq %rax,%rdx",
                "orq %rcx,%rdx",
                "shrq $32,%rdx",
                "je .LBB97_4",
                "",
                "xorl %edx,%edx",
                "divq %rcx",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0",
                "retq",
                ".LBB97_4:",
                "",
                "xorl %edx,%edx",
                "divl %ecx",
                "",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "movd %xmm0,%eax",
                "movd %xmm1,%ecx",
                "xorl %edx,%edx",
                "divl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-24(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $85,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $85,%xmm1,%xmm2",
                "movd %xmm2,%ecx",
                "xorl %edx,%edx",
                "divl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-20(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $238,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $238,%xmm1,%xmm2",
                "movd %xmm2,%ecx",
                "xorl %edx,%edx",
                "divl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-16(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pshufd $255,%xmm0,%xmm2",
                "movd %xmm2,%eax",
                "pshufd $255,%xmm1,%xmm1",
                "movd %xmm1,%ecx",
                "xorl %edx,%edx",
                "divl %ecx",
                "movdqa %xmm0,-24(%rsp)",
                "movl %edx,-12(%rsp)",
                "movaps -24(%rsp),%xmm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "movd %xmm0,%eax",
                "movd %xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-24(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $1,%xmm0,%eax",
                "pextrw $1,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-22(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $2,%xmm0,%eax",
                "pextrw $2,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-20(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $3,%xmm0,%eax",
                "pextrw $3,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-18(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $4,%xmm0,%eax",
                "pextrw $4,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-16(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $5,%xmm0,%eax",
                "pextrw $5,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-14(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $6,%xmm0,%eax",
                "pextrw $6,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-12(%rsp)",
                "movdqa -24(%rsp),%xmm0",
                "pextrw $7,%xmm0,%eax",
                "pextrw $7,%xmm1,%ecx",
                "",
                "xorl %edx,%edx",
                "divw %cx",
                "movdqa %xmm0,-24(%rsp)",
                "movw %dx,-10(%rsp)",
                "movaps -24(%rsp),%xmm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "subq $56,%rsp",
                ".cfi_def_cfa_offset64",
                "movaps %xmm0,(%rsp)",
                "movaps %xmm1,32(%rsp)",
                "movq %rsp,%rax",
                "movq %rax,16(%rsp)",
                "leaq 32(%rsp),%rax",
                "movq %rax,24(%rsp)",
                "leaq 16(%rsp),%rdi",
                "callq _ZZN3eve6detail8self_remIhNS_10sse_abi_v04wideIhNS_5fixedILl16EEEEES5_EEDcRNS3_IT_T1_EERKT0_ENKUlDpT_E_clIJSt17integral_constantImLm0EESI_ImLm1EESI_ImLm2EESI_ImLm3EESI_ImLm4EESI_ImLm5EESI_ImLm6EESI_ImLm7EESI_ImLm8EESI_ImLm9EESI_ImLm10EESI_ImLm11EESI_ImLm12EESI_ImLm13EESI_ImLm14EESI_ImLm15EEEEEDaSF_",
                "movaps (%rsp),%xmm0",
                "addq $56,%rsp",
                ".cfi_def_cfa_offset8"
            ]
        }
    ]
}