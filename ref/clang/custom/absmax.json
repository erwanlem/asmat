{
    "function": "absmax",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call a2",
                "jmp a7",
                "jmp ac",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call ce",
                "vmovaps %ymm0,(%rsp)",
                "jmp e3",
                "mov %rax,%rdi",
                "vzeroupper",
                "call e3",
                "vmovaps (%rsp),%ymm0",
                "vmovaps %ymm0,0x140(%rsp)",
                "vmovaps 0x140(%rsp),%ymm0",
                "vmovaps %ymm0,0xc0(%rsp)",
                "vmovaps 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovapd %ymm0,0xa0(%rsp)",
                "vmovapd %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovapd 0x60(%rsp),%ymm1",
                "vmovapd 0x40(%rsp),%ymm0",
                "vmovapd %ymm1,0x120(%rsp)",
                "vmovapd %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call 1c2",
                "jmp 1c7",
                "jmp 1cc",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call 1ee",
                "vmovaps %ymm0,(%rsp)",
                "jmp 203",
                "mov %rax,%rdi",
                "vzeroupper",
                "call 203",
                "vmovaps (%rsp),%ymm0",
                "vmovapd %ymm0,0x140(%rsp)",
                "vmovapd 0x140(%rsp),%ymm0",
                "vmovapd %ymm0,0xc0(%rsp)",
                "vmovapd 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call 2e2",
                "jmp 2e7",
                "jmp 2ec",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call 30e",
                "vmovaps %ymm0,(%rsp)",
                "jmp 323",
                "mov %rax,%rdi",
                "vzeroupper",
                "call 323",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call 402",
                "jmp 407",
                "jmp 40c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call 42e",
                "vmovaps %ymm0,(%rsp)",
                "jmp 443",
                "mov %rax,%rdi",
                "vzeroupper",
                "call 443",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call 522",
                "jmp 527",
                "jmp 52c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call 54e",
                "vmovaps %ymm0,(%rsp)",
                "jmp 563",
                "mov %rax,%rdi",
                "vzeroupper",
                "call 563",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call 642",
                "jmp 647",
                "jmp 64c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call 66e",
                "vmovaps %ymm0,(%rsp)",
                "jmp 683",
                "mov %rax,%rdi",
                "vzeroupper",
                "call 683",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call be2",
                "jmp be7",
                "jmp bec",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call c0e",
                "vmovaps %ymm0,(%rsp)",
                "jmp c23",
                "mov %rax,%rdi",
                "vzeroupper",
                "call c23",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call d02",
                "jmp d07",
                "jmp d0c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call d2e",
                "vmovaps %ymm0,(%rsp)",
                "jmp d43",
                "mov %rax,%rdi",
                "vzeroupper",
                "call d43",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call e22",
                "jmp e27",
                "jmp e2c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call e4e",
                "vmovaps %ymm0,(%rsp)",
                "jmp e63",
                "mov %rax,%rdi",
                "vzeroupper",
                "call e63",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call f42",
                "jmp f47",
                "jmp f4c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call f6e",
                "vmovaps %ymm0,(%rsp)",
                "jmp f83",
                "mov %rax,%rdi",
                "vzeroupper",
                "call f83",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call be2",
                "jmp be7",
                "jmp bec",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call c0e",
                "vmovaps %ymm0,(%rsp)",
                "jmp c23",
                "mov %rax,%rdi",
                "vzeroupper",
                "call c23",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call d02",
                "jmp d07",
                "jmp d0c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call d2e",
                "vmovaps %ymm0,(%rsp)",
                "jmp d43",
                "mov %rax,%rdi",
                "vzeroupper",
                "call d43",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call e22",
                "jmp e27",
                "jmp e2c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call e4e",
                "vmovaps %ymm0,(%rsp)",
                "jmp e63",
                "mov %rax,%rdi",
                "vzeroupper",
                "call e63",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "push %rbp",
                "mov %rsp,%rbp",
                "and $0xffffffffffffffe0,%rsp",
                "sub $0x1a0,%rsp",
                "vmovaps %ymm0,0xa0(%rsp)",
                "vmovaps %ymm1,0x80(%rsp)",
                "vmovaps 0xa0(%rsp),%ymm0",
                "vmovaps %ymm0,0x60(%rsp)",
                "vmovaps 0x80(%rsp),%ymm0",
                "vmovaps %ymm0,0x40(%rsp)",
                "vmovaps 0x60(%rsp),%ymm1",
                "vmovaps 0x40(%rsp),%ymm0",
                "vmovaps %ymm1,0x120(%rsp)",
                "vmovaps %ymm0,0x100(%rsp)",
                "lea 0x0(%rip),%rax",
                "mov %rax,0xf8(%rsp)",
                "mov 0xf8(%rsp),%rax",
                "mov %rax,0x38(%rsp)",
                "mov %rax,0x188(%rsp)",
                "mov 0x188(%rsp),%rax",
                "mov (%rax),%al",
                "mov %al,0x178(%rsp)",
                "lea 0x180(%rsp),%rdi",
                "vzeroupper",
                "call f42",
                "jmp f47",
                "jmp f4c",
                "mov 0x38(%rsp),%rdi",
                "lea 0xf0(%rsp),%rsi",
                "lea 0x120(%rsp),%rdx",
                "lea 0x100(%rsp),%rcx",
                "call f6e",
                "vmovaps %ymm0,(%rsp)",
                "jmp f83",
                "mov %rax,%rdi",
                "vzeroupper",
                "call f83",
                "vmovaps (%rsp),%ymm0",
                "vmovdqa %ymm0,0x140(%rsp)",
                "vmovdqa 0x140(%rsp),%ymm0",
                "vmovdqa %ymm0,0xc0(%rsp)",
                "vmovdqa 0xc0(%rsp),%ymm0",
                "mov %rbp,%rsp",
                "pop %rbp"
            ]
        }
    ]
}