{
    "function": "mul",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "mulps %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "mulpd %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int64_t",
                "std::int64_t"
            ],
            "instr": [
                "movq %xmm0,%rax",
                "movq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "pextrq $1,%xmm0,%rax",
                "pextrq $1,%xmm1,%rdx",
                "movq %rcx,%xmm0",
                "imulq %rax,%rdx",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int32_t",
                "std::int32_t"
            ],
            "instr": [
                "pmulld %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int16_t",
                "std::int16_t"
            ],
            "instr": [
                "pmullw %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::int8_t",
                "std::int8_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "psrlw $8,%xmm2",
                "pmullw %xmm1,%xmm0",
                "psrlw $8,%xmm1",
                "pmullw %xmm2,%xmm1",
                "pand .LCPI252_0(%rip),%xmm0",
                "psllw $8,%xmm1",
                "por %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "movq %xmm0,%rax",
                "movq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "pextrq $1,%xmm0,%rax",
                "pextrq $1,%xmm1,%rdx",
                "movq %rcx,%xmm0",
                "imulq %rax,%rdx",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "pmulld %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "pmullw %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "psrlw $8,%xmm2",
                "pmullw %xmm1,%xmm0",
                "psrlw $8,%xmm1",
                "pmullw %xmm2,%xmm1",
                "pand .LCPI260_0(%rip),%xmm0",
                "psllw $8,%xmm1",
                "por %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint64_t",
                "std::uint64_t"
            ],
            "instr": [
                "movq %xmm0,%rax",
                "movq %xmm1,%rcx",
                "imulq %rax,%rcx",
                "pextrq $1,%xmm0,%rax",
                "pextrq $1,%xmm1,%rdx",
                "movq %rcx,%xmm0",
                "imulq %rax,%rdx",
                "movq %rdx,%xmm1",
                "punpcklqdq %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint32_t",
                "std::uint32_t"
            ],
            "instr": [
                "pmulld %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint16_t",
                "std::uint16_t"
            ],
            "instr": [
                "pmullw %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "std::uint8_t",
                "std::uint8_t"
            ],
            "instr": [
                "movdqa %xmm0,%xmm2",
                "psrlw $8,%xmm2",
                "pmullw %xmm1,%xmm0",
                "psrlw $8,%xmm1",
                "pmullw %xmm2,%xmm1",
                "pand .LCPI260_0(%rip),%xmm0",
                "psllw $8,%xmm1",
                "por %xmm1,%xmm0"
            ]
        }
    ]
}